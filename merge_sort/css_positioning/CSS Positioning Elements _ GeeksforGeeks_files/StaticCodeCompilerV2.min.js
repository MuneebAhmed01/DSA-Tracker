window.StaticCodeCompiler=(e,t=!1,n)=>{function r(e){var t=document.createElement("script"),e=(t.type="text/javascript",e.trim()),n=new RegExp(/\<script\>(.*)\<\/script\>/gis).exec(e);try{var o=`
                try {
                    ${n&&n.length&&1<n.length?n[1]:e}
                }
                catch(err) {
                    console.log(err)
                    document.getElementById("staticCodeOutputPre").innerHTML = err
                }
            `;t.appendChild(document.createTextNode(o))}catch(e){t.text=e}return t}function c(){var e=document.createElement("script");e.type="text/javascript";try{e.appendChild(document.createTextNode(`
            try {
                let counter = 0;
                console.log = (function () {
                    return function(exception) {
                        if(typeof exception.stack !== "undefined") {
                            document.getElementById("staticCodeOutputPre").innerHTML = exception
                        }
                        else {
                            let output = "", arg, i;
                            for (i = 0; i < arguments.length; i++) {
                                arg = arguments[i];
                                output += "<span>";
                                if ( typeof arg === "object" && typeof JSON === "object" && typeof JSON.stringify === "function") {
                                    output += JSON.stringify(arg) + "<br>";
                                } else {
                                    output += arg + "<br>";
                                }
                                output += "</span> ";
                            }
                            document.getElementById("consoleOutput").style.display = "block"
                            let el = document.createElement('pre')
                            el.id = 'staticCodeOutputPre-' + counter++
                            el.innerHTML = output
                            document.getElementById("staticCodeOutputPre").append(el)
                        }
                    }
                })()
            }
            catch(err) {
                document.getElementById("staticCodeOutputPre").innerHTML = err
            }
            try {
                let docWriter = 0;
                document.write = (code) => {
                    let el = document.createElement('span')
                    el.id = 'docWriter-' + docWriter++
                    el.innerHTML = code
                    document.getElementById("docWriter").append(el)
                }
            }
            catch(err) {
                document.getElementById("docWriter").innerHTML = err
            }
            window.onerror = function(error) {
                console.log(error)
            }
        `))}catch(e){console.log("[Run JS failed] iFrame logger not working")}return e}try{var i=document.createElement("iframe");if(i.id="jsFrame",n.innerHTML="",n.append(i),i.contentWindow.document.open(),i.contentWindow.document.write("<div></div>"),t){var d=i;var a=e;var p,u=(a="string"==typeof a?{html:a}:a).html||"",l=a.css||"",a=a.javascript||"",u=(new DOMParser).parseFromString(u,"text/html"),s=(l&&((s=u.createElement("style")).textContent=l,u.head.appendChild(s)),a&&((l=u.createElement("script")).textContent=a,u.head.appendChild(l)),u.head.childNodes);let o=[];s&&NodeList.prototype.isPrototypeOf(s)&&Object.values(s).map(e=>{if("SCRIPT"!==e.tagName)d.contentDocument.head.append(e);else if("SCRIPT"===e.tagName&&e.src){var t,n=document.createElement("script");for(t of e.attributes)n.setAttribute(t.name,t.value);d.contentDocument.head.append(n)}else o.push(e)}),(a=u.body.childNodes)&&NodeList.prototype.isPrototypeOf(a)&&Object.values(a).map(e=>{if("SCRIPT"!==e.tagName)d.contentDocument.body.append(e);else if("SCRIPT"===e.tagName&&e.src){var t,n=document.createElement("script");for(t of e.attributes)n.setAttribute(t.name,t.value);d.contentDocument.body.append(n)}else o.push(e)});for(p of u.body.attributes)d.contentDocument.body.setAttribute(p.name,p.value);d.contentWindow.document.write(`
            <div id="docWriter"></div>
            <div id="consoleOutput" style="display:none; margin-top: 12px; padding: 8px; background-color: #f2f2f2;">
                <div style="color:#32a16b; font-size: 24px;">Console Log: </div>
            </div>
            <pre id="staticCodeOutputPre"></pre>
        `),l=c(),d.contentDocument.body.append(l),o.forEach(e=>{d.contentDocument.head.append(r(e.innerHTML))}),[].forEach(e=>{d.contentDocument.body.append(r(e.innerHTML))})}else{i.contentWindow.document.write(`
                <div id="docWriter"></div>
                <div id="consoleOutput" style="display:none; margin-top: 12px; padding: 8px; background-color: #f2f2f2;"><div style="color:#32a16b; font-size: 24px;">Console Log: </div> </div>
                <pre id="staticCodeOutputPre"></pre>
            `);var o=c(),m=(i.contentDocument.body.append(o),r(e));m&&i.contentDocument.body.append(m)}i.contentWindow.document.close()}catch(e){console.log("Error initializing JS compiler"),console.error(e)}};